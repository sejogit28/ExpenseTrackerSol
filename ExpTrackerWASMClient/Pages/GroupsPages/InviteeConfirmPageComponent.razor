@page "/inviteeconfirm/{inviteeEmail}/{groupId:int}"
@attribute [Microsoft.AspNetCore.Authorization.AllowAnonymous]
@inject IGroupsScreenUseCases GroupsScreenUseCases


<h3>Please Input the required info to confirm you want to join this group</h3>

<br />
<br />

<EditForm Model="inviteeConfirm" OnValidSubmit="InviteeConfirmSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="card w-25 shadow-sm">
        <h5 class="card-header">Create a New Group</h5>
        <div class="card-body">
            <InputDate hidden class="form-control" id="GroupId" @bind-Value="inviteeConfirm.GroupId"></InputDate>
            <InputText hidden class="form-control" id="InviteeEmail" @bind-Value="inviteeConfirm.InviteeEmail"></InputText>

            <div class="form-group mx-sm-3 mb-2">
                <label for="Amount" class="col-form-label">Inviter's Email</label>
                <InputText class="form-control" id="InviteeEmail" @bind-Value="inviteeConfirm.InviterEmail"></InputText>
                <ValidationMessage For="@(() => inviteeConfirm.InviterEmail)" />
            </div>

            <div class="form-group mx-sm-3 mb-2">
                <label for="Amount" class="col-form-label">Password</label>
                <InputText type="password" class="form-control" id="Password" @bind-Value="inviteeConfirm.Password"></InputText>
                <ValidationMessage For="@(() => inviteeConfirm.Password)" />
            </div>
            <div class="form-group mx-sm-3 mb-2">
                <label for="Amount" class="col-form-label">Confirm Password</label>
                <InputText type="password" class="form-control" id="ConfirmPassword" @bind-Value="inviteeConfirm.ConfirmPassword"></InputText>
                <ValidationMessage For="@(() => inviteeConfirm.ConfirmPassword)" />
            </div>

        </div>
        <div class="card-footer">


            <button class="btn btn-outline-primary">
                Confirm Invite Request
            </button>


        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int groupId { get; set; }

    [Parameter]
    public string inviteeEmail { get; set; }

    PossibleMemberConfirm inviteeConfirm;

    protected override void OnParametersSet()
    {
        inviteeConfirm = new PossibleMemberConfirm
        {
            InviteeEmail = inviteeEmail,
            InviterEmail = "",
            Password = "",
            ConfirmPassword = "",
            GroupId = groupId
        };
    }

    public async Task InviteeConfirmSubmit()
    {
        await GroupsScreenUseCases.GroupInviteeConfirm(inviteeConfirm);
    }

}
