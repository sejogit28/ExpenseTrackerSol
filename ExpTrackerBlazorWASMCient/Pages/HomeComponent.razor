@page "/homeChart/{targetMonth}"
@inject IExpensesScreenUseCases ExpensesScreenUseCases
@inject IIncomesScreenUseCases IncomesScreenUseCases

@*What follows(the 'if' statement) is VERY IMPORTANT due to the async nature of the way you're getting the data.*@
@if (totalMonthlyExpenses != 0)

{
    
    <Chart Config="_config"></Chart>

    <h3>What's left = @whatsLeft$</h3>
}

else
{
    <h2>
        Fetching Info...
        <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">

        </div>
    </h2>
}

@code {

    [Parameter]
    public string targetMonth { get; set; }

    IEnumerable<Incomes> incomesbyMonth;

    public float totalMonthlyIncome;

    IEnumerable<Expenses> expensesbyMonth;

    public float totalMonthlyExpenses;

    private PieConfig _config;

    public float whatsLeft;

    protected override async Task OnParametersSetAsync()
    {
        incomesbyMonth = await IncomesScreenUseCases.ViewIncomesByMonth(targetMonth);

        foreach (var income in incomesbyMonth)
        {
            totalMonthlyIncome += income.Amount;
        }

        expensesbyMonth = await ExpensesScreenUseCases.ViewExpensesByMonth(targetMonth);


        foreach (var expense in expensesbyMonth)
        {
            totalMonthlyExpenses += expense.Amount;
        }



        _config = new PieConfig(true)
        {

            Options = new PieOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = $"Income/Expense Comparison for {targetMonth}"
                }
            }
        };

        foreach (string DoughChartLabel in new[] { "Incomes", "Expenses" })
        {
            _config.Data.Labels.Add(DoughChartLabel);
        }

        PieDataset<float> dataset = new PieDataset<float>(new[] { totalMonthlyIncome, totalMonthlyExpenses })
        {
            BackgroundColor = new[]
            {
                ColorUtil.ColorHexString(54, 162, 235), // Slice 4 aka "Blue"
                ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
            }
        };

        _config.Data.Datasets.Add(dataset);

        whatsLeft = totalMonthlyIncome - totalMonthlyExpenses;

    }




}
